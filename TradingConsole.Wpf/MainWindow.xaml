<Window x:Class="TradingConsole.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradingConsole.Wpf"
        xmlns:viewModels="clr-namespace:TradingConsole.Wpf.ViewModels"
        xmlns:converters="clr-namespace:TradingConsole.Wpf.Converters"
        xmlns:views="clr-namespace:TradingConsole.Wpf.Views"
        mc:Ignorable="d"
        Title="Dhan Trading Console" Height="800" Width="1800"
        FontSize="13" WindowState="Maximized"
        Background="#F5F7FA">
    <Window.Resources>
        <!-- Converters -->
        <converters:ValueToBrushConverter x:Key="ValueToBrushConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <converters:OiToWidthConverter x:Key="OiToWidthConverter"/>
        <converters:AbsoluteValueConverter x:Key="AbsoluteValueConverter"/>
        <converters:ValueToSignConverter x:Key="ValueToSignConverter"/>

        <!-- Base Styles -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#E9ECEF"/>
            <Setter Property="BorderBrush" Value="#DEE2E6"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#DEE2E6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#007BFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#0069D9"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0069D9"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#DC3545"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#C82333"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C82333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="#007BFF"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Foreground" Value="#495057"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#DEE2E6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#E9ECEF"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F8F9FA"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="BorderBrush" Value="#DEE2E6"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Specific Styles -->
        <Style x:Key="PnlTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ValueToBrushConverter}}"/>
        </Style>

        <Style x:Key="ProfitLossCellStyle" TargetType="DataGridCell">
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text, Converter={StaticResource ValueToBrushConverter}}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="OptionChainRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsAtm}" Value="True">
                    <Setter Property="Background" Value="#FFFBEA"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CallCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CallState}" Value="ITM">
                    <Setter Property="Background" Value="#E6F4EA"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PutCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Binding="{Binding PutState}" Value="ITM">
                    <Setter Property="Background" Value="#FFF0F1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StrikePriceCellStyle" TargetType="DataGridCell">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#E9ECEF"/>
            <Setter Property="Foreground" Value="#212529"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TabControl Grid.Row="0">
            <!-- Positions Tab -->
            <TabItem Header="Portfolio">
                <DockPanel>
                    <!-- Portfolio Summary Header -->
                    <Border DockPanel.Dock="Top" Padding="15" BorderBrush="#DEE2E6" BorderThickness="0,0,0,1" Background="White">
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Portfolio}">
                            <TextBlock Text="Booked P&amp;L:" VerticalAlignment="Center" FontWeight="SemiBold" Margin="0,0,5,0"/>
                            <TextBlock Text="{Binding Path=BookedPnl, StringFormat='₹#,##0.00'}" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Style="{StaticResource PnlTextStyle}"/>
                            <TextBlock Text="Open P&amp;L (MTM):" VerticalAlignment="Center" FontWeight="SemiBold" Margin="25,0,5,0"/>
                            <TextBlock Text="{Binding Path=OpenPnl, StringFormat='₹#,##0.00'}" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Style="{StaticResource PnlTextStyle}"/>
                            <TextBlock Text="Net P&amp;L:" VerticalAlignment="Center" FontWeight="SemiBold" Margin="25,0,5,0"/>
                            <TextBlock Text="{Binding Path=NetPnl, StringFormat='₹#,##0.00'}" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Style="{StaticResource PnlTextStyle}"/>
                            <Button Content="Refresh" Command="{Binding DataContext.RefreshPortfolioCommand, RelativeSource={RelativeSource AncestorType=TabItem}}" HorizontalAlignment="Left" Margin="30,0,0,0"/>
                        </StackPanel>
                    </Border>

                    <!-- Main Content Area for Positions -->
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="0.8*" />
                        </Grid.RowDefinitions>

                        <!-- Open Positions -->
                        <GroupBox Grid.Row="0" Header="Open Positions" FontWeight="Bold" FontSize="14" Padding="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <DataGrid ItemsSource="{Binding Portfolio.OpenPositions}" VerticalScrollBarVisibility="Auto">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn MinWidth="30">
                                            <DataGridTemplateColumn.Header>
                                                <CheckBox IsChecked="{Binding DataContext.Portfolio.SelectAllOpenPositions, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn Header="Instrument" Binding="{Binding Ticker}" Width="2.5*" />
                                        <DataGridTextColumn Header="Product" Binding="{Binding ProductType}" Width="*" />
                                        <DataGridTextColumn Header="Qty" Binding="{Binding Quantity}" Width="0.7*" />
                                        <DataGridTextColumn Header="Avg. Price" Binding="{Binding AveragePrice, StringFormat='N2'}" Width="*" />
                                        <DataGridTextColumn Header="LTP" Binding="{Binding LastTradedPrice, StringFormat='N2'}" Width="*" />
                                        <DataGridTextColumn Header="P&amp;L" Binding="{Binding UnrealizedPnl, StringFormat='N2'}" CellStyle="{StaticResource ProfitLossCellStyle}" Width="*"/>
                                        <DataGridTemplateColumn Header="Actions" Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                        <Button Content="Add" ToolTip="Add to this position" Command="{Binding DataContext.AddPositionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}"/>
                                                        <Button Content="Exit" ToolTip="Exit this position" Style="{StaticResource DangerButton}" Command="{Binding DataContext.ExitPositionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}"/>
                                                        <Button Content="C" ToolTip="Convert Position Type" Width="30" Command="{Binding DataContext.ConvertPositionCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Grid.Row="1" Content="Close Selected Positions" Command="{Binding CloseSelectedPositionsCommand}" HorizontalAlignment="Left" Style="{StaticResource DangerButton}"/>
                            </Grid>
                        </GroupBox>

                        <GridSplitter Grid.Row="1" Height="8" HorizontalAlignment="Stretch" Background="Transparent" ResizeDirection="Rows"/>

                        <!-- Closed Positions -->
                        <GroupBox Grid.Row="2" Header="Closed Positions" FontWeight="Bold" FontSize="14" Padding="5">
                            <DataGrid ItemsSource="{Binding Portfolio.ClosedPositions}" VerticalScrollBarVisibility="Auto">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Instrument" Binding="{Binding Ticker}" Width="2.5*" />
                                    <DataGridTextColumn Header="Product" Binding="{Binding ProductType}" Width="*" />
                                    <DataGridTextColumn Header="Buy Qty" Binding="{Binding BuyQuantity}" Width="0.7*" />
                                    <DataGridTextColumn Header="Avg. Buy" Binding="{Binding AveragePrice, StringFormat='N2'}" Width="*" />
                                    <DataGridTextColumn Header="Sell Qty" Binding="{Binding SellQuantity}" Width="0.7*" />
                                    <DataGridTextColumn Header="Avg. Sell" Binding="{Binding SellAverage, StringFormat='N2'}" Width="*" />
                                    <DataGridTextColumn Header="Realized P&amp;L" Binding="{Binding RealizedPnl, StringFormat='N2'}" CellStyle="{StaticResource ProfitLossCellStyle}" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>
                    </Grid>
                </DockPanel>
            </TabItem>

            <!-- Control Panel Tab -->
            <TabItem Header="Control Panel">
                <StackPanel Orientation="Horizontal" Margin="10" VerticalAlignment="Top">
                    <GroupBox Header="Fund Summary" Padding="15" Margin="5" MinWidth="350" FontWeight="SemiBold" BorderBrush="#DDDDDD">
                        <Grid DataContext="{Binding Portfolio.FundDetails}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Available Cash:" Margin="5"/>
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding AvailableBalance, StringFormat=C, ConverterCulture=en-IN}" HorizontalAlignment="Right" Margin="5" FontWeight="Bold"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Margin Used:" Margin="5"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding UtilizedMargin, StringFormat=C, ConverterCulture=en-IN}" HorizontalAlignment="Right" Margin="5" FontWeight="Bold"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Collateral:" Margin="5"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Collateral, StringFormat=C, ConverterCulture=en-IN}" HorizontalAlignment="Right" Margin="5" FontWeight="Bold"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Withdrawable Balance:" Margin="5"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding WithdrawableBalance, StringFormat=C, ConverterCulture=en-IN}" HorizontalAlignment="Right" Margin="5" FontWeight="Bold"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Application Settings" Padding="15" Margin="10,5,5,5" MinWidth="350" FontWeight="SemiBold" BorderBrush="#DDDDDD">
                        <StackPanel DataContext="{Binding Settings}">
                            <TextBlock Text="Freeze Quantities" FontWeight="Bold" FontSize="14" Margin="5,0,5,10"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Nifty:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding NiftyFreezeQuantity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Bank Nifty:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding BankNiftyFreezeQuantity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="FinNifty:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding FinNiftyFreezeQuantity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Sensex:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SensexFreezeQuantity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="EMA Lengths" FontWeight="Bold" FontSize="14" Margin="5,15,5,5"/>
                                <TextBlock Grid.Row="5" Grid.Column="0" Text="Short EMA:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding ShortEmaLength, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Row="6" Grid.Column="0" Text="Long EMA:" VerticalAlignment="Center" Margin="5"/>
                                <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding LongEmaLength, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5" Width="100" HorizontalAlignment="Left"/>

                                <Button Grid.Row="7" Grid.Column="1" Command="{Binding SaveSettingsCommand}" Content="Save Settings" Margin="5,15,5,5" HorizontalAlignment="Left" Style="{StaticResource PrimaryButton}"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <!-- NEW: Custom Index Levels GroupBox -->
                    <GroupBox Header="Custom Index Levels" Padding="15" Margin="10,5,5,5" MinWidth="450" FontWeight="SemiBold" BorderBrush="#DDDDDD">
                        <Grid DataContext="{Binding Settings}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Headers -->
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="NTZ Lower" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="NTZ Upper" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                            <TextBlock Grid.Row="0" Grid.Column="3" Text="Support" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                            <TextBlock Grid.Row="0" Grid.Column="4" Text="Resistance" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
                            <TextBlock Grid.Row="0" Grid.Column="5" Text="Threshold" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>

                            <!-- Nifty Row -->
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Nifty:" FontWeight="Bold" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NiftyNoTradeLower}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding NiftyNoTradeUpper}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding NiftySupport}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="1" Grid.Column="4" Text="{Binding NiftyResistance}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="1" Grid.Column="5" Text="{Binding NiftyThreshold}" Margin="2" Padding="3"/>

                            <!-- BankNifty Row -->
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="BankNifty:" FontWeight="Bold" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding BankniftyNoTradeLower}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding BankniftyNoTradeUpper}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding BankniftySupport}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="2" Grid.Column="4" Text="{Binding BankniftyResistance}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="2" Grid.Column="5" Text="{Binding BankniftyThreshold}" Margin="2" Padding="3"/>

                            <!-- Sensex Row -->
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Sensex:" FontWeight="Bold" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SensexNoTradeLower}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding SensexNoTradeUpper}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding SensexSupport}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="3" Grid.Column="4" Text="{Binding SensexResistance}" Margin="2" Padding="3"/>
                            <TextBox Grid.Row="3" Grid.Column="5" Text="{Binding SensexThreshold}" Margin="2" Padding="3"/>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <!-- Option Chain Tab -->
            <TabItem Header="Option Chain">
                <DockPanel>
                    <Border DockPanel.Dock="Top" Padding="10" BorderBrush="#DEE2E6" BorderThickness="0,0,0,1" Background="White">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Index: " VerticalAlignment="Center" FontWeight="SemiBold"/>
                            <ComboBox ItemsSource="{Binding Indices}" SelectedItem="{Binding SelectedIndex}" MinWidth="120" Margin="5,0"/>
                            <TextBlock Text="Expiry Date: " VerticalAlignment="Center" FontWeight="SemiBold" Margin="15,0,0,0"/>
                            <ComboBox ItemsSource="{Binding ExpiryDates}" SelectedItem="{Binding SelectedExpiry}" MinWidth="150" Margin="5,0"/>
                            <StackPanel Orientation="Horizontal" Margin="20,0,0,0" VerticalAlignment="Center">
                                <TextBlock Text="{Binding SelectedIndex.Name}" VerticalAlignment="Center" FontWeight="Bold" FontSize="14"/>
                                <TextBlock Text="{Binding UnderlyingPrice, StringFormat=N2}" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                <TextBlock Foreground="{Binding UnderlyingPriceChange, Mode=OneWay, Converter={StaticResource ValueToBrushConverter}}" Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Run Text="{Binding UnderlyingPriceChange, Mode=OneWay, StringFormat=N2}"/>
                                    <Run Text="{Binding UnderlyingPriceChangePercent, Mode=OneWay, StringFormat=' ({0:P2})'}" Foreground="Gray"/>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <DataGrid ItemsSource="{Binding OptionChainRows}" RowStyle="{StaticResource OptionChainRowStyle}" VerticalGridLinesBrush="#DEE2E6">
                        <DataGrid.Columns>
                            <!-- Calls Side (Left) -->
                            <DataGridTemplateColumn Header="OI Profile" Width="130">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border HorizontalAlignment="Right" Background="#E6F4EA">
                                                <Border.Width>
                                                    <MultiBinding Converter="{StaticResource OiToWidthConverter}">
                                                        <Binding Path="CallOption.OI"/>
                                                        <Binding Path="DataContext.MaxOi" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                    </MultiBinding>
                                                </Border.Width>
                                            </Border>
                                            <Border HorizontalAlignment="Right" Background="#C8E6C9">
                                                <Border.Width>
                                                    <MultiBinding Converter="{StaticResource OiToWidthConverter}">
                                                        <Binding Path="CallOption.OiChange" Converter="{StaticResource AbsoluteValueConverter}"/>
                                                        <Binding Path="DataContext.MaxOiChange" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                    </MultiBinding>
                                                </Border.Width>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Delta" Binding="{Binding CallOption.Delta, StringFormat=N2}" CellStyle="{StaticResource CallCellStyle}" Width="0.7*"/>
                            <DataGridTextColumn Header="Volume" Binding="{Binding CallOption.Volume, StringFormat=N0}" CellStyle="{StaticResource CallCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="OI Change" Binding="{Binding CallOption.OiChange, StringFormat=N0}" CellStyle="{StaticResource CallCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="OI" Binding="{Binding CallOption.OI, StringFormat=N0}" CellStyle="{StaticResource CallCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="IV" Binding="{Binding CallOption.IV, StringFormat=N2}" CellStyle="{StaticResource CallCellStyle}" Width="0.7*"/>
                            <DataGridTemplateColumn Header="LTP Change" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding CallOption.LtpChange, Mode=OneWay, Converter={StaticResource ValueToBrushConverter}}">
                                            <Run Text="{Binding CallOption.LtpChange, Mode=OneWay, StringFormat=N2}"/>
                                            <Run Text="{Binding CallOption.LtpChangePercent, Mode=OneWay, StringFormat=' ({0:P2})'}" Foreground="Gray"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource CallCellStyle}"/>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="LTP" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Background="Transparent">
                                            <TextBlock Text="{Binding CallOption.LTP, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToVis}, ConverterParameter=Invert}"/>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToVis}}">
                                                <Button Content="B" Width="25" Height="22" Margin="1" Style="{StaticResource PrimaryButton}" Command="{Binding DataContext.BuyCallCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                                <Button Content="S" Width="25" Height="22" Margin="1" Style="{StaticResource DangerButton}" Command="{Binding DataContext.SellCallCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource CallCellStyle}"/>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <!-- STRIKE -->
                            <DataGridTextColumn Header="Strike" Binding="{Binding StrikePrice, StringFormat=N0}" Width="Auto" CellStyle="{StaticResource StrikePriceCellStyle}"/>

                            <!-- Puts Side (Right) -->
                            <DataGridTemplateColumn Header="LTP" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Background="Transparent">
                                            <TextBlock Text="{Binding PutOption.LTP, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToVis}, ConverterParameter=Invert}"/>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToVis}}">
                                                <Button Content="B" Width="25" Height="22" Margin="1" Style="{StaticResource PrimaryButton}" Command="{Binding DataContext.BuyPutCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                                <Button Content="S" Width="25" Height="22" Margin="1" Style="{StaticResource DangerButton}" Command="{Binding DataContext.SellPutCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource PutCellStyle}"/>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="LTP Change" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding PutOption.LtpChange, Mode=OneWay, Converter={StaticResource ValueToBrushConverter}}">
                                            <Run Text="{Binding PutOption.LtpChange, Mode=OneWay, StringFormat=N2}"/>
                                            <Run Text="{Binding PutOption.LtpChangePercent, Mode=OneWay, StringFormat=' ({0:P2})'}" Foreground="Gray"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource PutCellStyle}"/>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="IV" Binding="{Binding PutOption.IV, StringFormat=N2}" CellStyle="{StaticResource PutCellStyle}" Width="0.7*"/>
                            <DataGridTextColumn Header="OI" Binding="{Binding PutOption.OI, StringFormat=N0}" CellStyle="{StaticResource PutCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="OI Change" Binding="{Binding PutOption.OiChange, StringFormat=N0}" CellStyle="{StaticResource PutCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="Volume" Binding="{Binding PutOption.Volume, StringFormat=N0}" CellStyle="{StaticResource PutCellStyle}" Width="*"/>
                            <DataGridTextColumn Header="Delta" Binding="{Binding PutOption.Delta, StringFormat=N2}" CellStyle="{StaticResource PutCellStyle}" Width="*"/>
                            <DataGridTemplateColumn Header="OI Profile" Width="130">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border HorizontalAlignment="Left" Background="#FFF0F1">
                                                <Border.Width>
                                                    <MultiBinding Converter="{StaticResource OiToWidthConverter}">
                                                        <Binding Path="PutOption.OI"/>
                                                        <Binding Path="DataContext.MaxOi" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                    </MultiBinding>
                                                </Border.Width>
                                            </Border>
                                            <Border HorizontalAlignment="Left" Background="#FFCDD2">
                                                <Border.Width>
                                                    <MultiBinding Converter="{StaticResource OiToWidthConverter}">
                                                        <Binding Path="PutOption.OiChange" Converter="{StaticResource AbsoluteValueConverter}"/>
                                                        <Binding Path="DataContext.MaxOiChange" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                    </MultiBinding>
                                                </Border.Width>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>

            <!-- Orders Tab -->
            <TabItem Header="Orders">
                <DockPanel>
                    <Border DockPanel.Dock="Top" Padding="10" BorderBrush="#DEE2E6" BorderThickness="0,0,0,1" Background="White">
                        <Button Content="Refresh Orders" Command="{Binding RefreshOrdersCommand}" HorizontalAlignment="Left"/>
                    </Border>
                    <DataGrid ItemsSource="{Binding Orders}" Margin="10">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OrderStatus}" Value="TRADED">
                                        <Setter Property="Background" Value="#E8F8F5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding OrderStatus}" Value="CANCELLED">
                                        <Setter Property="Background" Value="#FDEDEC" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding OrderStatus}" Value="REJECTED">
                                        <Setter Property="Background" Value="#FDEDEC" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPending}" Value="True">
                                        <Setter Property="Background" Value="#EBF5FB" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" Binding="{Binding CreateTime, StringFormat='HH:mm:ss'}" Width="Auto"/>
                            <DataGridTextColumn Header="Symbol" Binding="{Binding TradingSymbol}" Width="*"/>
                            <DataGridTextColumn Header="Type" Binding="{Binding TransactionType}" Width="Auto"/>
                            <DataGridTextColumn Header="Qty" Binding="{Binding Quantity}" Width="Auto"/>
                            <DataGridTextColumn Header="Avg. Price" Binding="{Binding AverageTradedPrice, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="Status" Binding="{Binding OrderStatus}" Width="*"/>
                            <DataGridTextColumn Header="Order Type" Binding="{Binding OrderType}" Width="Auto"/>
                            <DataGridTextColumn Header="Product" Binding="{Binding ProductType}" Width="Auto"/>

                            <DataGridTemplateColumn Header="Actions" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                    Visibility="{Binding IsPending, Converter={StaticResource BoolToVis}}">
                                            <Button Content="Modify" Margin="2,0" Padding="5,1"
                                                    Command="{Binding DataContext.ModifyOrderCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    CommandParameter="{Binding}"/>
                                            <Button Content="Cancel" Margin="2,0" Padding="5,1" Style="{StaticResource DangerButton}"
                                                    Command="{Binding DataContext.CancelOrderCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    CommandParameter="{Binding}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="Order ID" Binding="{Binding OrderId}" Width="2*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>

            <!-- Dashboard Tab -->
            <TabItem Header="Dashboard">
                <DockPanel>
                    <Border DockPanel.Dock="Top" Padding="10" BorderBrush="#DEE2E6" BorderThickness="0,0,0,1" Background="White">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Add Instrument:" VerticalAlignment="Center" FontWeight="Bold" Margin="5,0"/>
                            <TextBox Text="{Binding NewInstrumentSymbol, UpdateSourceTrigger=PropertyChanged}" Width="250" VerticalAlignment="Center" Margin="5,0"
                                     ToolTip="Format: TYPE:SYMBOL (e.g., EQ:RELIANCE, FUT:NIFTY, IDX:Nifty 50)"/>
                            <Button Content="Add to Dashboard" Command="{Binding AddInstrumentCommand}" Style="{StaticResource PrimaryButton}" />
                        </StackPanel>
                    </Border>
                    <DataGrid ItemsSource="{Binding Dashboard.MonitoredInstruments}" Margin="10">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Symbol" Binding="{Binding DisplayName}" Width="*" FontWeight="SemiBold"/>
                            <DataGridTextColumn Header="LTP" Binding="{Binding LTP, StringFormat=N2}" Width="Auto"/>
                            <DataGridTemplateColumn Header="Change" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Foreground="{Binding Change, Converter={StaticResource ValueToBrushConverter}, Mode=OneWay}" HorizontalAlignment="Center">
                                            <Run Text="{Binding Change, StringFormat=N2, Mode=OneWay}"/>
                                            <Run Text="{Binding ChangePercent, StringFormat=' ({0:P2})', Mode=OneWay}" Foreground="Gray"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Open" Binding="{Binding Open, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="High" Binding="{Binding High, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="Low" Binding="{Binding Low, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="ATP" Binding="{Binding AvgTradePrice, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="Prev. Close" Binding="{Binding Close, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="Volume" Binding="{Binding Volume, StringFormat=N0}" Width="Auto"/>
                            <DataGridTextColumn Header="OI" Binding="{Binding OpenInterest, StringFormat=N0}" Width="Auto"/>
                            <DataGridTextColumn Header="IV" Binding="{Binding ImpliedVolatility, StringFormat=N2}" Width="Auto"/>
                            <DataGridTextColumn Header="Signal" Binding="{Binding TradingSignal}" Width="*"/>
                            <DataGridTemplateColumn Header="Actions">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Remove" 
                                                Command="{Binding DataContext.RemoveInstrumentCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}"
                                                Style="{StaticResource DangerButton}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>

            <!-- Analysis Tab -->
            <TabItem Header="Analysis">
                <views:AnalysisTabView DataContext="{Binding AnalysisTab}"/>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="1" VerticalAlignment="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Total Call OI:" FontWeight="SemiBold" Margin="5,0"/>
                    <TextBlock Text="{Binding TotalCallOi, StringFormat=N0}" Foreground="Green"/>
                    <TextBlock Text=" | " Margin="5,0"/>
                    <TextBlock Text="Total Put OI:" FontWeight="SemiBold" Margin="5,0"/>
                    <TextBlock Text="{Binding TotalPutOi, StringFormat=N0}" Foreground="Red"/>
                    <TextBlock Text=" | " Margin="5,0"/>
                    <TextBlock Text="PCR (OI):" FontWeight="Bold" Margin="5,0"/>
                    <TextBlock Text="{Binding PcrOi, StringFormat=F2}"/>
                </StackPanel>
            </StatusBarItem>

            <StatusBarItem Grid.Column="1" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding StatusMessage}" HorizontalAlignment="Center"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Total Call Vol:" FontWeight="SemiBold" Margin="5,0"/>
                    <TextBlock Text="{Binding TotalCallVolume, StringFormat=N0}" Foreground="Green"/>
                    <TextBlock Text=" | " Margin="5,0"/>
                    <TextBlock Text="Total Put Vol:" FontWeight="SemiBold" Margin="5,0"/>
                    <TextBlock Text="{Binding TotalPutVolume, StringFormat=N0}" Foreground="Red"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
